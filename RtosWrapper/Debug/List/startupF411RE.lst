###############################################################################
#
# IAR ANSI C/C++ Compiler V9.30.1.335/W64 for ARM         20/Jun/2025  22:26:52
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\startupF411RE.cpp
#    Command line                 =
#        -f
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Debug\Obj\startupF411RE.o.rsp
#        (D:\RtosWrapper\minor-labs\repo\RtosWrapper\startupF411RE.cpp -lC
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Debug\List\ -lA
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Debug\List\ -o
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Debug\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
#        --fpu=VFPv4_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\inc\c\DLib_Config_Normal.h" -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Rtos\ -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Rtos\wrapper\ -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Rtos\wrapper\FreeRtos\ -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Rtos\FreeRtos\ -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Rtos\FreeRtos\include\ -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Rtos\FreeRtos\portable\ -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Rtos\FreeRtos\portable\Common\
#        -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Rtos\FreeRtos\portable\IAR\
#        -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Rtos\FreeRtos\portable\IAR\ARM_CM4F\
#        -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Rtos\FreeRtos\portable\MemMang\
#        -I D:\RtosWrapper\minor-labs\repo\RtosWrapper\MyTasks\ -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Common\ -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\CMSIS\ -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Application\ -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Application\Diagnostic\ -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\AHardware\ -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\AHardware\GpioPort\ -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\AHardware\IrqController\ -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\..\CortexLib\AbstractHardware\Pin\
#        -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\..\CortexLib\AbstractHardware\Registers\STM32F411\FieldValues\
#        -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\..\CortexLib\AbstractHardware\Registers\STM32F411\
#        -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\..\CortexLib\AbstractHardware\Registers\
#        -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\..\CortexLib\AbstractHardware\Port\
#        -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\..\CortexLib\AbstractHardware\Atomic\
#        -I D:\RtosWrapper\minor-labs\repo\RtosWrapper\..\CortexLib\Common\ -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\..\CortexLib\Common\Singleton\
#        -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\..\CortexLib\Common\RomObject\
#        -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Application\Implementation\
#        -I D:\RtosWrapper\minor-labs\repo\RtosWrapper\Application\Contracts\
#        -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Application\Implementation\Modes\
#        -I
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Application\Implementation\
#        -Ol --c++ --no_exceptions --no_rtti) --dependencies=n
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Debug\Obj\startupF411RE.o.d
#    Locale                       =  C
#    List file                    =
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Debug\List\startupF411RE.lst
#    Object file                  =
#        D:\RtosWrapper\minor-labs\repo\RtosWrapper\Debug\Obj\startupF411RE.o
#    Runtime model:                  
#      __CPP_Exceptions           =  Disabled
#      __CPP_Language             =  C++14
#      __CPP_Library              =  DLib
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  0
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#
###############################################################################

D:\RtosWrapper\minor-labs\repo\RtosWrapper\startupF411RE.cpp
      1          /******************************************************************************
      2           *  FILENAME: startupF411RE.cpp
      3           *  
      4           * DESCRIPTION: Файл с векторами прерывания для Cortex-M. для С++.
      5           * Поскольку почему-то в Cortex-M все обработчики должны по имени точно 
      6           *  совпадать с имена в таблице векторов, а название метода из С++ класса 
      7           * совпасть с такой таблицей со стандратными стартап файлами никак не может
      8           * то вот приходиться такой же писать на С++. 
      9           * Внимание!!!!!! Имена классов точно должны совпадать с именами у вас в проекте
     10           * Можно изменить и сократить количество классов, если есть желание, например
     11           *
     12           * Copyright (c) 2018 by South Ural State University
     13           * Author: Сергей Колодий
     14           ******************************************************************************/
     15          
     16          #pragma language = extended
     17          #pragma segment = "CSTACK"
     18          #include "Rtos/wrapper/rtos.hpp"

   \                                 In section .text, align 2
   \   __vfp void OsWrapper::RtosWrapper::wHandleSvcInterrupt()
   \                     _ZN9OsWrapper11RtosWrapper19wHandleSvcInterruptEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x.... 0x....      BL       vPortSVCHandler
   \        0x6   0xBD01             POP      {R0,PC}

   \                                 In section .text, align 2
   \   __vfp void OsWrapper::RtosWrapper::wHandleSysTickInterrupt()
   \                     _ZN9OsWrapper11RtosWrapper23wHandleSysTickInterruptEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x.... 0x....      BL       xPortSysTickHandler
   \        0x6   0xBD01             POP      {R0,PC}

   \                                 In section .text, align 2
   \   __vfp void OsWrapper::Rtos::HandleSvcInterrupt()
   \                     _ZN9OsWrapper4Rtos18HandleSvcInterruptEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x.... 0x....      BL       _ZN9OsWrapper11RtosWrapper19wHandleSvcInterruptEv
   \        0x6   0xBD01             POP      {R0,PC}

   \                                 In section .text, align 2
   \   __vfp void OsWrapper::Rtos::HandleSysTickInterrupt()
   \                     _ZN9OsWrapper4Rtos22HandleSysTickInterruptEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x.... 0x....      BL       _ZN9OsWrapper11RtosWrapper23wHandleSysTickInterruptEv
   \        0x6   0xBD01             POP      {R0,PC}
     19          
     20          extern "C" void __iar_program_start( void );
     21          extern "C" void xPortPendSVHandler(void);
     22          
     23          
     24          class DummyModule
     25          {
     26            public:
     27              static void handler();
     28          };
     29          
     30          using tIntFunct = void(*)();
     31          //cstat !MISRAC++2008-9-5-1
     32          using tIntVectItem = union {tIntFunct __fun; void * __ptr;};
     33          
     34          // The vector table is normally located at address 0.
     35          // When debugging in RAM, it can be located in RAM, aligned to at least 2^6.
     36          // If you need to define interrupt service routines,
     37          // make a copy of this file and include it in your project.
     38          // The name "__vector_table" has special meaning for C-SPY:
     39          // it is where the SP start value is found, and the NVIC vector
     40          // table register (VTOR) is initialized to this address if != 0.
     41          
     42          #pragma location = ".intvec"
     43          //cstat !MISRAC++2008-0-1-4_b !MISRAC++2008-9-5-1

   \                                 In section .intvec, align 4
     44          extern "C" const tIntVectItem __vector_table[] =
   \                     __vector_table:
   \        0x0   0x....'....        DC32 SFE(CSTACK), __iar_program_start, _ZN11DummyModule7handlerEv

   \              0x....'....  

   \              0x....'....
   \        0xC   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x14   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv, 0x0, 0x0

   \              0x....'....  

   \              0x0000'0000  

   \              0x0000'0000
   \       0x24   0x0000'0000        DC32 0x0, 0x0, _ZN9OsWrapper4Rtos18HandleSvcInterruptEv

   \              0x0000'0000  

   \              0x....'....
   \       0x30   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, xPortPendSVHandler

   \              0x0000'0000  

   \              0x....'....
   \       0x3C   0x....'....        DC32 _ZN9OsWrapper4Rtos22HandleSysTickInterruptEv
   \       0x40   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x48   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x50   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x58   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x60   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x68   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x70   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x78   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x80   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x88   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, 0x0, 0x0, 0x0

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000
   \       0x9C   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xA4   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xAC   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xB4   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xBC   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xC4   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xCC   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xD4   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv, 0x0

   \              0x....'....  

   \              0x0000'0000
   \       0xE0   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xE8   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, 0x0, 0x0, 0x0

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000
   \       0xFC   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, _ZN11DummyModule7handlerEv

   \              0x0000'0000  

   \              0x....'....
   \      0x108   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv, 0x0, 0x0

   \              0x....'....  

   \              0x0000'0000  

   \              0x0000'0000
   \      0x118   0x0000'0000        DC32 0x0, 0x0, _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x0000'0000  

   \              0x....'....  

   \              0x....'....
   \      0x128   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \      0x130   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000
   \      0x14C   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \      0x154   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \      0x15C   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \      0x164   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000
   \      0x184   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, 0x0, _ZN11DummyModule7handlerEv

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x....'....
   \      0x194   0x....'....        DC32 _ZN11DummyModule7handlerEv
     45          {
     46            { .__ptr = __sfe( "CSTACK" ) },
     47            __iar_program_start,
     48          
     49            DummyModule::handler,
     50            DummyModule::handler,
     51            DummyModule::handler,
     52            DummyModule::handler,
     53            DummyModule::handler,
     54            0,
     55            0,
     56            0,
     57            0,
     58            OsWrapper::Rtos::HandleSvcInterrupt,
     59            DummyModule::handler,
     60            0,
     61            xPortPendSVHandler,
     62            OsWrapper::Rtos::HandleSysTickInterrupt,
     63            //External Interrupts
     64            DummyModule::handler,         //Window Watchdog
     65            DummyModule::handler,         //PVD through EXTI Line detect/EXTI16
     66            DummyModule::handler,         //Tamper and Time Stamp/EXTI21 
     67            DummyModule::handler,         //RTC Wakeup/EXTI22 
     68            DummyModule::handler,         //FLASH
     69            DummyModule::handler,         //RCC
     70            DummyModule::handler,         //EXTI Line 0
     71            DummyModule::handler,         //EXTI Line 1
     72            DummyModule::handler,         //EXTI Line 2
     73            DummyModule::handler,         //EXTI Line 3
     74            DummyModule::handler,         //EXTI Line 4
     75            DummyModule::handler,         //DMA1 Stream 0
     76            DummyModule::handler,         //DMA1 Stream 1
     77            DummyModule::handler,         //DMA1 Stream 2
     78            DummyModule::handler,         //DMA1 Stream 3
     79            DummyModule::handler,         //DMA1 Stream 4
     80            DummyModule::handler,         //DMA1 Stream 5
     81            DummyModule::handler,         //DMA1 Stream 6
     82            DummyModule::handler,         //ADC1
     83            0,                            //USB High Priority
     84            0,                            //USB Low  Priority
     85            0,                            //DAC
     86            0,                            //COMP through EXTI Line
     87            DummyModule::handler,         //EXTI Line 9..5
     88            DummyModule::handler,         //TIM9/TIM1 Break interrupt 
     89            DummyModule::handler,         //TIM10/TIM1 Update interrupt
     90            DummyModule::handler,         //TIM11/TIM1 Trigger/Commutation interrupts
     91            DummyModule::handler,		//TIM1 Capture Compare interrupt
     92            DummyModule::handler,         //TIM2  	
     93            DummyModule::handler,         //TIM3
     94            DummyModule::handler,         //TIM4
     95            DummyModule::handler,         //I2C1 Event
     96            DummyModule::handler,         //I2C1 Error
     97            DummyModule::handler,         //I2C2 Event
     98            DummyModule::handler,         //I2C2 Error
     99            DummyModule::handler,         //SPI1
    100            DummyModule::handler,         //SPI2
    101            DummyModule::handler,         //USART1
    102            DummyModule::handler,         //USART2
    103            0,
    104            DummyModule::handler,         //EXTI Line 15..10
    105            DummyModule::handler,         //EXTI Line 17 interrupt / RTC Alarms (A and B) through EXTI line interrupt
    106            DummyModule::handler,         //EXTI Line 18 interrupt / USB On-The-Go  FS Wakeup through EXTI line interrupt
    107            0,				//TIM6
    108            0,				//TIM7  f0
    109            0,
    110            0,
    111            DummyModule::handler,         //DMA1 Stream 7 global interrupt fc
    112            0,
    113            DummyModule::handler,	        //SDIO global interrupt
    114            DummyModule::handler,	        //TIM5 global interrupt
    115            DummyModule::handler,	        //SPI3 global interrupt
    116            0,			        // 110
    117            0,
    118            0,
    119            0,
    120            DummyModule::handler,		//DMA2 Stream0 global interrupt 120
    121            DummyModule::handler,		//DMA2 Stream1 global interrupt
    122            DummyModule::handler,		//DMA2 Stream2 global interrupt
    123            DummyModule::handler,		//DMA2 Stream3 global interrupt
    124            DummyModule::handler,		//DMA2 Stream4 global interrupt 130
    125            0,
    126            0,
    127            0,
    128            0,
    129            0,
    130            0,
    131            DummyModule::handler,		//USB On The Go FS global interrupt, 14C
    132            DummyModule::handler,		//DMA2 Stream5 global interrupt
    133            DummyModule::handler,		//DMA2 Stream6 global interrupt
    134            DummyModule::handler,		//DMA2 Stream7 global interrupt
    135            DummyModule::handler,				//USART6 15C
    136            DummyModule::handler,         //I2C3 Event
    137            DummyModule::handler,         //I2C3 Error 164
    138            0,
    139            0,
    140            0,
    141            0,
    142            0,
    143            0,
    144            0,
    145            DummyModule::handler,		//FPU 184
    146            0,
    147            0,
    148            DummyModule::handler,		//SPI 4 global interrupt
    149            DummyModule::handler		//SPI 5 global interrupt
    150          };
    151          

   \                                 In section .text, align 2, keep-with-next
    152          void DummyModule::handler()   { for(;;) {} } ;
   \                     _ZN11DummyModule7handlerEv: (+1)
   \                     ??handler_0: (+1)
   \        0x0   0xE7FE             B.N      ??handler_0
    153          
    154          extern "C" void __cmain( void );
    155          extern "C" __weak void __iar_init_core( void );
    156          extern "C" __weak void __iar_init_vfp( void );
    157          
    158          #pragma required=__vector_table

   \                                 In section .text, align 2, keep-with-next
    159          void __iar_program_start( void )
    160          {
   \                     __iar_program_start: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    161            __iar_init_core();
   \        0x2   0x.... 0x....      BL       __iar_init_core
    162            __iar_init_vfp();
   \        0x6   0x.... 0x....      BL       __iar_init_vfp
    163            __cmain();
   \        0xA   0x.... 0x....      BL       __cmain
    164          }
   \        0xE   0xBD01             POP      {R0,PC}
   \       0x10                      REQUIRE __vector_table
    165          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   DummyModule::handler()
       8   OsWrapper::Rtos::HandleSvcInterrupt()
         8   -> OsWrapper::RtosWrapper::wHandleSvcInterrupt()
       8   OsWrapper::Rtos::HandleSysTickInterrupt()
         8   -> OsWrapper::RtosWrapper::wHandleSysTickInterrupt()
       8   OsWrapper::RtosWrapper::wHandleSvcInterrupt()
         8   -> OsWrapper::vPortSVCHandler
       8   OsWrapper::RtosWrapper::wHandleSysTickInterrupt()
         8   -> OsWrapper::xPortSysTickHandler
       8   __iar_program_start
         8   -> __cmain
         8   -> __iar_init_core
         8   -> __iar_init_vfp


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  DummyModule::handler()
       8  OsWrapper::Rtos::HandleSvcInterrupt()
       8  OsWrapper::Rtos::HandleSysTickInterrupt()
       8  OsWrapper::RtosWrapper::wHandleSvcInterrupt()
       8  OsWrapper::RtosWrapper::wHandleSysTickInterrupt()
      16  __iar_program_start
     408  __vector_table
      24  -- Other

 
 408 bytes in section .intvec
  24 bytes in section .rodata
  50 bytes in section .text
 
  18 bytes of CODE  memory (+ 32 bytes shared)
 408 bytes of CONST memory (+ 24 bytes shared)

Errors: none
Warnings: none
